// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "forge-std/console.sol";
import "../src/plonk_vk.sol";

contract PlonkVkTest is Test {
    TurboVerifier public verifier;

    function setUp() public {
        verifier = new TurboVerifier();
    }

    function getBasicProofRequest() public pure returns (string[] memory) {
        string[] memory inputs = new string[](4);
        inputs[0] = "yarn";
        inputs[1] = "ts-node";
        inputs[2] = "node-scripts/generate_proof.ts";
        inputs[3] = "circuits/simple_circuit/src/main.nr";
        return inputs;
    }

    function testVerify() public {
        string[] memory inputs = getBasicProofRequest();

        bytes memory proof = vm.ffi(inputs);
        // bytes
        //     memory proof = " 0x00000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000423f9d63558295820f03fb9887fe42e801fa075d06513fbb9b666251613692c3c279d48b9c516d62da64709ee304f675ad8899fd81348f16c6bfedeac2d31768708e924c942a47db89bb4a17c81743a41a35c8d1f050b103065e8a7c69aade2560fa12ecfc7b51156784f87e8c465917fbbcafe79d9fbf0a1992c0e5de14e32f016f81a1c1c82e554f5c9343644b365a248cafe64cbfe0554f43d3ce83bce9a851ed550f96e0d08acdcc69c31c7c7fc166874af78f62b3ec6fe0f28a28fdfee9120e8cc1119d7993a0bb12e39533354528b9e95aad4fa139289b384ad68d3788b2914f1a849c5d42bee91ab920a44370f2328970ac9184c25658f5a11d14712070678e5d16306612b225e1ea25ac16438180a2e2a0adff9589ee4c32c32601a28093d8d9cb83e2a5dc99a3022295dc8be2882504f0a50b092cd3c46131aa0ead019068ad9ce296bde244cad70989aa6fd6f364bc3b8b8c476adb5df1da9460d471e62e9f91b5b6e04ee2ea4e035e63f5010801aa592e6adf1aef599d5cc9723350b375bfd5ef84fab32c026afe49af9f0075fc4e6382ac454569ad2f2b8e49860188eb010e0b77d455b67419f6ec9dde021825bf2e9ec02873e8a5b9a1366db07034d9636e17be4fe1d1a29134952fea5afcdeb5175c4f4930650c8072e4d9a461b91d24b691063134847c9e4b8081c5bc91826c8000b0e2c12c4c887c31192f42e95a861168b98ff769ead369a96db9ce6cca6e50617c7a21f36ea51f62c9c55227e7287834b8b70ca1ef9d9b08950d90331e61c9282cd7cde5f38b95fcce93709a9f1ed8afc6c519419054834afdde0b914c8330ea6010c71662943b5db5a0a0a08144507f7793054ffd664a860ee1e9c972408975d0a86a4204929a2161dcf0020b766d363e413fd4c57b894628d9d7866a829285aa3a6a31ce7c65958198a2fc8c12aba9f6a8033cefb362e81c57ed995d8c690a60143818a9d8e70e292011d1c9068b51313abe4a17e78608f5edb4ad1cfa364cedc56f8a5f101345d834d0d6f459b4541ffc7f59564146276a89f54d1265161bbe4f54644b46b8d7a2b49283a7dbfbd8a9c4dd37d80a8c3e68ac1061659df29073569a1d9480467accbf602fc94bc903a7d25084fc04efa9c84a7f43f8aaf725ea2cc6d36fff9f0d4d0aa1e7f98a954432f97bdd536bd5e455bf800136e8746618f1f816ce52cb3afca111e7f98a954432f97bdd536bd5e455bf800136e8746618f1f816ce52cb3afca112642812bed411a14c542bb445f476ee521b1f4c45226c0126b48531287406686299f5e1efe2f399db4b61bd264d97c2e4a4b52995ee009fdc827fd7526aa79f6229f8260da5468034114a38fab5815ad7755175ca7dc986eb0e408bda4b9c3641dfaaf5d5075bd86b56bf54fcc32693a177d9f910c7fa9984f893d6213a680422bfa66d9982b60bb9caee5d53f35363bbd6a160a7a868cb67e1126d11787ed662d04a81c33ff52b0306e3e48ab68b09b31f27d7ddfd116ecb1ca238b625da82e1a586b624dc85a388abe52fff0c8f31e97d2ddbf36c24eed92a4490472da2ea8032ff788d0493a00a0fd5e6b5aac6c4ed8ee709fea46e05e44aa1754715b7cd72bdf826c06681869ed4fdac48d166240385e8b25bff5ef6c7edc6f7bd5a4a41c";
        // console.logBytes(proof);
        // assertEq(string(proof), "test");
        assertEq(verifier.verify(proof), true);
    }
}
